package com.stylefeng.guns.modular.system.controller;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.mapper.Wrapper;
import com.stylefeng.guns.common.controller.BaseController;
import com.stylefeng.guns.common.exception.BizExceptionEnum;
import com.stylefeng.guns.common.exception.BussinessException;
import com.stylefeng.guns.common.persistence.dao.CallsLogMapper;
import com.stylefeng.guns.common.persistence.model.CallsLog;
import com.stylefeng.guns.core.log.LogObjectHolder;
import com.stylefeng.guns.core.util.ToolUtil;
import com.stylefeng.guns.modular.system.dao.CallsLogDao;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;

import java.util.List;

/**
 * 来电日志控制器
 *
 * @author fengshuonan
 * @Date 2018-06-14 09:21:47
 */
@Controller
@RequestMapping("/callsLog")
public class CallsLogController extends BaseController {

    private String PREFIX = "/system/callsLog/";

    @Autowired
    private  CallsLogMapper callsLogMapper;

    /**
     * 跳转到来电日志首页
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "callsLog.html";
    }

    /**
     * 跳转到添加来电日志
     */
    @RequestMapping("/callsLog_add")
    public String callsLogAdd() {
        return PREFIX + "callsLog_add.html";
    }

    /**
     * 跳转到修改来电日志
     */
    @RequestMapping("/callsLog_update/{callsLogId}")
    public String callsLogUpdate(@PathVariable Integer callsLogId, Model model) {
        CallsLog callsLog = callsLogMapper.selectById(callsLogId);
        model.addAttribute(callsLog);
        LogObjectHolder.me().set(callsLog);
        return PREFIX + "callsLog_edit.html";
    }

    /**
     * 获取来电日志列表
     */
    @RequestMapping(value = "/list")
    @ResponseBody
    public Object list(String condition) {
        if (ToolUtil.isNotEmpty(condition)) {
            EntityWrapper<CallsLog> callsLogEntityWrapper = new EntityWrapper<>();
            Wrapper<CallsLog> callsLogId = callsLogEntityWrapper.like("calls_Num", "%"+condition+"%");
            return callsLogMapper.selectList(callsLogId);
        } else {
            return callsLogMapper.selectList(null);
        }
    }

    /**
     * 新增来电日志
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    public Object add(CallsLog callsLog) {

        if (ToolUtil.isOneEmpty(callsLog)) {
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
            callsLogMapper.insert(callsLog);
        return super.SUCCESS_TIP;
    }
    /**
     * 删除来电日志
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public Object delete(int callsLogId) {
        callsLogMapper.deleteById(callsLogId);
        return SUCCESS_TIP;
    }


    /**
     * 修改来电日志
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    public Object update(CallsLog callsLog) {
        if (ToolUtil.isEmpty(callsLog) || callsLog.getCallsLogId() == null){
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
        callsLogMapper.updateById(callsLog);
        return super.SUCCESS_TIP;
    }

    /**
     * 来电日志详情
     */
    @RequestMapping(value = "/detail")
    @ResponseBody
    public Object detail() {
        return null;
    }
}
